{
    "task_id": "HumanEval/162",
    "prompt": "\ndef string_to_md5(text):\n    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string, return None.\n\n    >>> string_to_md5('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    \"\"\"\n",
    "canonical_solution": "    import hashlib\n    return hashlib.md5(text.encode('ascii')).hexdigest() if text else None\n",
    "test": "def check(candidate):\n\n    # Check some simple cases\n    assert candidate('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    assert candidate('') == None\n    assert candidate('A B C') == '0ef78513b0cb8cef12743f5aeb35f888'\n    assert candidate('password') == '5f4dcc3b5aa765d61d8327deb882cf99'\n\n    # Check some edge cases that are easy to work out by hand.\n    assert True\n\n",
    "entry_point": "string_to_md5",
    "testbase": "from method import string_to_md5\ndef check(candidate):\n    assert candidate('password') == '5f4dcc3b5aa765d61d8327deb882cf99'\n\n\nif __name__ == '__main__':\n    check(string_to_md5)\n",
    "coverage": 100.0,
    "coverage_testbase": 100.0,
    "num_iterations_used": 0,
    "msg_trace": {
        "1": {
            "generated_test_script": "from method import string_to_md5\ndef check(candidate):\n    assert candidate('password') == '5f4dcc3b5aa765d61d8327deb882cf99'\n\n\nif __name__ == '__main__':\n    check(string_to_md5)\n",
            "coverage": 100.0,
            "exist_error": false,
            "executed_output": ""
        }
    },
    "best_score_generated_test_script": "from method import string_to_md5\ndef check(candidate):\n    assert candidate('password') == '5f4dcc3b5aa765d61d8327deb882cf99'\n\n\nif __name__ == '__main__':\n    check(string_to_md5)\n",
    "first_generated_test_script": "from method import string_to_md5\ndef check(candidate):\n    assert candidate('password') == '5f4dcc3b5aa765d61d8327deb882cf99'\n\n\nif __name__ == '__main__':\n    check(string_to_md5)\n",
    "not_error_best_generated_test_script": "from method import string_to_md5\ndef check(candidate):\n    assert candidate('password') == '5f4dcc3b5aa765d61d8327deb882cf99'\n\n\nif __name__ == '__main__':\n    check(string_to_md5)\n",
    "filtered_generated_test_script": "from method import string_to_md5\ndef check(candidate):\n    assert candidate('password') == '5f4dcc3b5aa765d61d8327deb882cf99'\n\n\nif __name__ == '__main__':\n    check(string_to_md5)\n",
    "exist_error": false,
    "best_score": 100.0,
    "first_score": 100.0,
    "not_error_best_score": 100.0,
    "exist_not_error": true,
    "filtered_score": 100.0,
    "use_filter": false
}