{
    "task_id": "HumanEval/16",
    "prompt": "\n\ndef count_distinct_characters(string: str) -> int:\n    \"\"\" Given a string, find out how many distinct characters (regardless of case) does it consist of\n    >>> count_distinct_characters('xyzXYZ')\n    3\n    >>> count_distinct_characters('Jerry')\n    4\n    \"\"\"\n",
    "canonical_solution": "    return len(set(string.lower()))\n",
    "test": "\n\nMETADATA = {\n    'author': 'jt',\n    'dataset': 'test'\n}\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abcde') == 5\n    assert candidate('abcde' + 'cade' + 'CADE') == 5\n    assert candidate('aaaaAAAAaaaa') == 1\n    assert candidate('Jerry jERRY JeRRRY') == 5\n",
    "entry_point": "count_distinct_characters",
    "testbase": "from method import count_distinct_characters\ndef check(candidate):\n    assert candidate('aaaaAAAAaaaa') == 1\n\n\nif __name__ == '__main__':\n    check(count_distinct_characters)\n",
    "coverage": 100.0,
    "coverage_testbase": 100.0
}