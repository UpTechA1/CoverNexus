{
    "task_id": "HumanEval/145",
    "prompt": "\ndef order_by_points(nums):\n    \"\"\"\n    Write a function which sorts the given list of integers\n    in ascending order according to the sum of their digits.\n    Note: if there are several items with similar sum of their digits,\n    order them based on their index in original list.\n\n    For example:\n    >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) == []\n    \"\"\"\n",
    "canonical_solution": "    def digits_sum(n):\n        neg = 1\n        if n < 0: n, neg = -1 * n, -1 \n        n = [int(i) for i in str(n)]\n        n[0] = n[0] * neg\n        return sum(n)\n    return sorted(nums, key=digits_sum)\n",
    "test": "def check(candidate):\n\n    # Check some simple cases\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234,423,463,145,2,423,423,53,6,37,3457,3,56,0,46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1,2,3,4,5,6,7,8,9,10,11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,6,6,-76,-21,23,4]) == [-76, -21, 0, 4, 23, 6, 6]\n\n    # Check some edge cases that are easy to work out by hand.\n    assert True, \"This prints if this assert fails 2 (also good for debugging!)\"\n\n",
    "entry_point": "order_by_points",
    "coverage": 100.0,
    "num_iterations_used": 3,
    "msg_trace": {
        "1": {
            "generated_test_script": "from codebase import *\n\nimport unittest\nfrom codebase import order_by_points\n\nclass TestOrderByPoints(unittest.TestCase):\n    def test_order_by_points(self):\n        with self.subTest(i=0):\n            self.assertEqual(order_by_points([1, 11, -1, -11, -12]), [-1, -11, 1, -12, 11])\n        with self.subTest(i=1):\n            self.assertEqual(order_by_points([]), [])\n        with self.subTest(i=2):\n            self.assertEqual(order_by_points([15, 23, 7, 14]), [7, 14, 15, 23])\n        with self.subTest(i=3):\n            self.assertEqual(order_by_points([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5])\n        with self.subTest(i=4):\n            self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\n        with self.subTest(i=5):\n            self.assertEqual(order_by_points([0, 0, 0, 0]), [0, 0, 0, 0])\n\nif __name__ == '__main__':\n    unittest.main()\n",
            "executed_output": "FF\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=2)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 13, in test_order_by_points\n    self.assertEqual(order_by_points([15, 23, 7, 14]), [7, 14, 15, 23])\nAssertionError: Lists differ: [23, 14, 15, 7] != [7, 14, 15, 23]\n\nFirst differing element 0:\n23\n7\n\n- [23, 14, 15, 7]\n?  ^^          ^\n\n+ [7, 14, 15, 23]\n?  ^          ^^\n\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=4)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 17, in test_order_by_points\n    self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\nAssertionError: Lists differ: [-5, -4, -3, -2, -1] != [-1, -2, -3, -4, -5]\n\nFirst differing element 0:\n-5\n-1\n\n- [-5, -4, -3, -2, -1]\n+ [-1, -2, -3, -4, -5]\n\n----------------------------------------------------------------------\nRan 1 test in 0.001s\n\nFAILED (failures=2)\n\nName                                                                                              Stmts   Miss  Cover   Missing\n-------------------------------------------------------------------------------------------------------------------------------\n/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/codebase.py       8      0   100%\n-------------------------------------------------------------------------------------------------------------------------------\nTOTAL                                                                                                 8      0   100%\n",
            "coverage": 100.0,
            "exist_error": true
        },
        "2": {
            "generated_test_script": "from codebase import *\n\nimport unittest\nfrom codebase import order_by_points\n\nclass TestOrderByPoints(unittest.TestCase):\n    def test_order_by_points(self):\n        with self.subTest(i=0):\n            self.assertEqual(order_by_points([15, 23, 7, 14]), [7, 14, 15, 23])\n        with self.subTest(i=1):\n            self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\n        with self.subTest(i=2):\n            self.assertEqual(order_by_points([1, 11, -1, -11, -12]), [-1, -11, 1, -12, 11])\n        with self.subTest(i=3):\n            self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\n        with self.subTest(i=4):\n            self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\n        with self.subTest(i=5):\n            self.assertEqual(order_by_points([1, 11, -1, -11, -12]), [-1, -11, 1, -12, 11])\n        with self.subTest(i=6):\n            self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\n        with self.subTest(i=7):\n            self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\n        with self.subTest(i=8):\n            self.assertEqual(order_by_points([1, 11, -1, -11, -12]), [-1, -11, 1, -12, 11])\n        with self.subTest(i=9):\n            self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\n\nif __name__ == '__main__':\n    unittest.main()\n",
            "executed_output": "FFFFFFF\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=0)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 9, in test_order_by_points\n    self.assertEqual(order_by_points([15, 23, 7, 14]), [7, 14, 15, 23])\nAssertionError: Lists differ: [23, 14, 15, 7] != [7, 14, 15, 23]\n\nFirst differing element 0:\n23\n7\n\n- [23, 14, 15, 7]\n?  ^^          ^\n\n+ [7, 14, 15, 23]\n?  ^          ^^\n\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=1)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 11, in test_order_by_points\n    self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\nAssertionError: Lists differ: [-5, -4, -3, -2, -1] != [-1, -2, -3, -4, -5]\n\nFirst differing element 0:\n-5\n-1\n\n- [-5, -4, -3, -2, -1]\n+ [-1, -2, -3, -4, -5]\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=3)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 15, in test_order_by_points\n    self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\nAssertionError: Lists differ: [-15, 23, 14, 7] != [-15, 7, 14, 23]\n\nFirst differing element 1:\n23\n7\n\n- [-15, 23, 14, 7]\n?       ^^      ^\n\n+ [-15, 7, 14, 23]\n?       ^      ^^\n\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=4)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 17, in test_order_by_points\n    self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\nAssertionError: Lists differ: [-5, -4, -3, -2, -1] != [-1, -2, -3, -4, -5]\n\nFirst differing element 0:\n-5\n-1\n\n- [-5, -4, -3, -2, -1]\n+ [-1, -2, -3, -4, -5]\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=6)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 21, in test_order_by_points\n    self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\nAssertionError: Lists differ: [-15, 23, 14, 7] != [-15, 7, 14, 23]\n\nFirst differing element 1:\n23\n7\n\n- [-15, 23, 14, 7]\n?       ^^      ^\n\n+ [-15, 7, 14, 23]\n?       ^      ^^\n\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=7)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 23, in test_order_by_points\n    self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\nAssertionError: Lists differ: [-5, -4, -3, -2, -1] != [-1, -2, -3, -4, -5]\n\nFirst differing element 0:\n-5\n-1\n\n- [-5, -4, -3, -2, -1]\n+ [-1, -2, -3, -4, -5]\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=9)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 27, in test_order_by_points\n    self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\nAssertionError: Lists differ: [-15, 23, 14, 7] != [-15, 7, 14, 23]\n\nFirst differing element 1:\n23\n7\n\n- [-15, 23, 14, 7]\n?       ^^      ^\n\n+ [-15, 7, 14, 23]\n?       ^      ^^\n\n\n----------------------------------------------------------------------\nRan 1 test in 0.002s\n\nFAILED (failures=7)\n\nName                                                                                              Stmts   Miss  Cover   Missing\n-------------------------------------------------------------------------------------------------------------------------------\n/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/codebase.py       8      0   100%\n-------------------------------------------------------------------------------------------------------------------------------\nTOTAL                                                                                                 8      0   100%\n",
            "coverage": 100.0,
            "exist_error": true
        },
        "3": {
            "generated_test_script": "from codebase import *\n\nimport unittest\nfrom codebase import order_by_points\n\nclass TestOrderByPoints(unittest.TestCase):\n    def test_order_by_points(self):\n        with self.subTest(i=0):\n            self.assertEqual(order_by_points([15, 23, 7, 14]), [7, 14, 15, 23])\n        with self.subTest(i=1):\n            self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\n        with self.subTest(i=2):\n            self.assertEqual(order_by_points([1, 11, -1, -11, -12]), [-1, -11, 1, -12, 11])\n        with self.subTest(i=3):\n            self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\n        with self.subTest(i=4):\n            self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\n        with self.subTest(i=5):\n            self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\n        with self.subTest(i=6):\n            self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\n        with self.subTest(i=7):\n            self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\n        with self.subTest(i=8):\n            self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\n        with self.subTest(i=9):\n            self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\n\nif __name__ == '__main__':\n    unittest.main()\n",
            "executed_output": "FFFFFFFFF\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=0)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 9, in test_order_by_points\n    self.assertEqual(order_by_points([15, 23, 7, 14]), [7, 14, 15, 23])\nAssertionError: Lists differ: [23, 14, 15, 7] != [7, 14, 15, 23]\n\nFirst differing element 0:\n23\n7\n\n- [23, 14, 15, 7]\n?  ^^          ^\n\n+ [7, 14, 15, 23]\n?  ^          ^^\n\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=1)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 11, in test_order_by_points\n    self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\nAssertionError: Lists differ: [-5, -4, -3, -2, -1] != [-1, -2, -3, -4, -5]\n\nFirst differing element 0:\n-5\n-1\n\n- [-5, -4, -3, -2, -1]\n+ [-1, -2, -3, -4, -5]\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=3)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 15, in test_order_by_points\n    self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\nAssertionError: Lists differ: [-15, 23, 14, 7] != [-15, 7, 14, 23]\n\nFirst differing element 1:\n23\n7\n\n- [-15, 23, 14, 7]\n?       ^^      ^\n\n+ [-15, 7, 14, 23]\n?       ^      ^^\n\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=4)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 17, in test_order_by_points\n    self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\nAssertionError: Lists differ: [-5, -4, -3, -2, -1] != [-1, -2, -3, -4, -5]\n\nFirst differing element 0:\n-5\n-1\n\n- [-5, -4, -3, -2, -1]\n+ [-1, -2, -3, -4, -5]\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=5)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 19, in test_order_by_points\n    self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\nAssertionError: Lists differ: [-15, 23, 14, 7] != [-15, 7, 14, 23]\n\nFirst differing element 1:\n23\n7\n\n- [-15, 23, 14, 7]\n?       ^^      ^\n\n+ [-15, 7, 14, 23]\n?       ^      ^^\n\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=6)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 21, in test_order_by_points\n    self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\nAssertionError: Lists differ: [-5, -4, -3, -2, -1] != [-1, -2, -3, -4, -5]\n\nFirst differing element 0:\n-5\n-1\n\n- [-5, -4, -3, -2, -1]\n+ [-1, -2, -3, -4, -5]\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=7)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 23, in test_order_by_points\n    self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\nAssertionError: Lists differ: [-15, 23, 14, 7] != [-15, 7, 14, 23]\n\nFirst differing element 1:\n23\n7\n\n- [-15, 23, 14, 7]\n?       ^^      ^\n\n+ [-15, 7, 14, 23]\n?       ^      ^^\n\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=8)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 25, in test_order_by_points\n    self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\nAssertionError: Lists differ: [-5, -4, -3, -2, -1] != [-1, -2, -3, -4, -5]\n\nFirst differing element 0:\n-5\n-1\n\n- [-5, -4, -3, -2, -1]\n+ [-1, -2, -3, -4, -5]\n\n======================================================================\nFAIL: test_order_by_points (__main__.TestOrderByPoints.test_order_by_points) (i=9)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/generated_test.py\", line 27, in test_order_by_points\n    self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\nAssertionError: Lists differ: [-15, 23, 14, 7] != [-15, 7, 14, 23]\n\nFirst differing element 1:\n23\n7\n\n- [-15, 23, 14, 7]\n?       ^^      ^\n\n+ [-15, 7, 14, 23]\n?       ^      ^^\n\n\n----------------------------------------------------------------------\nRan 1 test in 0.002s\n\nFAILED (failures=9)\n\nName                                                                                              Stmts   Miss  Cover   Missing\n-------------------------------------------------------------------------------------------------------------------------------\n/home/pc/Documents/Coverage-Test-Agent/test_coverage_multiagents/temp_test_deepseek/codebase.py       8      0   100%\n-------------------------------------------------------------------------------------------------------------------------------\nTOTAL                                                                                                 8      0   100%\n",
            "coverage": 100.0,
            "exist_error": true
        }
    },
    "best_score_generated_test_script": "from codebase import *\n\nimport unittest\nfrom codebase import order_by_points\n\nclass TestOrderByPoints(unittest.TestCase):\n    def test_order_by_points(self):\n        with self.subTest(i=0):\n            self.assertEqual(order_by_points([15, 23, 7, 14]), [7, 14, 15, 23])\n        with self.subTest(i=1):\n            self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\n        with self.subTest(i=2):\n            self.assertEqual(order_by_points([1, 11, -1, -11, -12]), [-1, -11, 1, -12, 11])\n        with self.subTest(i=3):\n            self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\n        with self.subTest(i=4):\n            self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\n        with self.subTest(i=5):\n            self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\n        with self.subTest(i=6):\n            self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\n        with self.subTest(i=7):\n            self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\n        with self.subTest(i=8):\n            self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\n        with self.subTest(i=9):\n            self.assertEqual(order_by_points([-15, 23, 7, 14]), [-15, 7, 14, 23])\n\nif __name__ == '__main__':\n    unittest.main()\n",
    "first_generated_test_script": "from codebase import *\n\nimport unittest\nfrom codebase import order_by_points\n\nclass TestOrderByPoints(unittest.TestCase):\n    def test_order_by_points(self):\n        with self.subTest(i=0):\n            self.assertEqual(order_by_points([1, 11, -1, -11, -12]), [-1, -11, 1, -12, 11])\n        with self.subTest(i=1):\n            self.assertEqual(order_by_points([]), [])\n        with self.subTest(i=2):\n            self.assertEqual(order_by_points([15, 23, 7, 14]), [7, 14, 15, 23])\n        with self.subTest(i=3):\n            self.assertEqual(order_by_points([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5])\n        with self.subTest(i=4):\n            self.assertEqual(order_by_points([-1, -2, -3, -4, -5]), [-1, -2, -3, -4, -5])\n        with self.subTest(i=5):\n            self.assertEqual(order_by_points([0, 0, 0, 0]), [0, 0, 0, 0])\n\nif __name__ == '__main__':\n    unittest.main()\n",
    "not_error_best_generated_test_script": "",
    "filtered_generated_test_script": "",
    "exist_error": true,
    "best_score": 100.0,
    "first_score": 100.0,
    "not_error_best_score": 0,
    "exist_not_error": false,
    "filtered_score": 0,
    "use_filter": false
}